<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.0</version>
    </parent>

    <groupId>com.lightframework</groupId>
    <artifactId>lightframework</artifactId>
    <version>${revision}</version>
    <modules>
        <module>light-common</module>
        <module>light-core</module>
        <module>light-auth</module>
        <module>light-websocket</module>
        <module>light-database</module>
        <module>light-starter</module>
        <module>light-util</module>
        <module>light-system-log</module>
        <module>light-plugin</module>
    </modules>
    <packaging>pom</packaging>
    <description>微框架</description>

    <properties>
        <revision>1.0</revision>
        <lightframework.version>${revision}</lightframework.version>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <fastjson2.version>2.0.27</fastjson2.version>
        <clickhouse.version>0.4.6</clickhouse.version>
        <jsch.version>0.1.55</jsch.version>
        <commons-net.version>3.8.0</commons-net.version>
        <commons-io.version>2.11.0</commons-io.version>
        <flatten.version>1.4.1</flatten.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.alibaba.fastjson2</groupId>
                <artifactId>fastjson2</artifactId>
                <version>${fastjson2.version}</version>
            </dependency>
            <dependency>
                <groupId>com.clickhouse</groupId>
                <artifactId>clickhouse-jdbc</artifactId>
                <version>${clickhouse.version}</version>
                <classifier>all</classifier>
            </dependency>
            <dependency>
                <groupId>com.jcraft</groupId>
                <artifactId>jsch</artifactId>
                <version>${jsch.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-net</groupId>
                <artifactId>commons-net</artifactId>
                <version>${commons-net.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${flatten.version}</version>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <configuration>
                        <excludes>
                            <exclude>config/**</exclude>
                        </excludes>
                        <archive>
                            <manifest>
                                <mainClass>${mainClass}</mainClass>
                                <addClasspath>true</addClasspath>
                                <classpathPrefix>lib/</classpathPrefix>
                            </manifest>
                            <manifestEntries>
                                <Implementation-Title>${project.artifactId}</Implementation-Title>
                                <Implementation-Version>${project.version}</Implementation-Version>
                                <Class-Path>./</Class-Path>
                            </manifestEntries>
                        </archive>
<!--                        <skip>${skipBuild}</skip>-->
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <configuration>
                        <!-- not append assembly id in release file name -->
                        <appendAssemblyId>false</appendAssemblyId>
                        <descriptors>
                            <descriptor>src/main/assembly/assembly.xml</descriptor>
                        </descriptors>
<!--                        <skipAssembly>${skipBuild}</skipAssembly>-->
                    </configuration>
                    <executions>
                        <execution>
                            <id>make-assembly</id>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <profiles>
        <profile>
            <id>NEXUS-YuLing</id>
            <properties>
                <!--      nexus.name与settings文件中server的id保持一致          -->
                <nexus.name>YuLing</nexus.name>
                <nexus.url>http://192.168.51.9:8081</nexus.url>
            </properties>
            <repositories>
                <repository>
                    <id>${nexus.name}-central</id>
                    <name>${nexus.name} Central</name>
                    <url>${nexus.url}/repository/maven-public/</url>
                </repository>
            </repositories>
            <pluginRepositories>
                <pluginRepository>
                    <id>${nexus.name}-central</id>
                    <name>${nexus.name} Central</name>
                    <url>${nexus.url}/repository/maven-public/</url>
                </pluginRepository>
            </pluginRepositories>
            <distributionManagement>
                <!-- 注意： maven会判断工程版本version后面是否带了-SNAPSHOT，如果带了就发布到snapshots仓库，否则发布到release仓库。-->
                <repository>
                    <!--id任意，在setting文件中<server>的ID与这里一致-->
                    <id>${nexus.name}</id>
                    <name>${nexus.name} Releases</name>
                    <!--指向仓库类型为host(宿主仓库）的储存类型为Release的仓库-->
                    <url>${nexus.url}/repository/maven-releases/</url>
                </repository>
                <snapshotRepository>
                    <id>${nexus.name}</id>
                    <name>${nexus.name} Snapshots</name>
                    <!--指向仓库类型为host(宿主仓库）的储存类型为Snapshot的仓库-->
                    <url>${nexus.url}/repository/maven-snapshots/</url>
                </snapshotRepository>
            </distributionManagement>
        </profile>
        <profile>
            <id>NEXUS-CongXing</id>
            <properties>
                <!--      nexus.name与settings文件中server的id保持一致          -->
                <nexus.name>CongXing</nexus.name>
                <nexus.url>http://192.168.1.21:8081</nexus.url>
            </properties>
            <repositories>
                <repository>
                    <id>${nexus.name}-central</id>
                    <name>${nexus.name} Central</name>
                    <url>${nexus.url}/repository/maven-public/</url>
                </repository>
            </repositories>
            <pluginRepositories>
                <pluginRepository>
                    <id>${nexus.name}-central</id>
                    <name>${nexus.name} Central</name>
                    <url>${nexus.url}/repository/maven-public/</url>
                </pluginRepository>
            </pluginRepositories>
            <distributionManagement>
                <!-- 注意： maven会判断工程版本version后面是否带了-SNAPSHOT，如果带了就发布到snapshots仓库，否则发布到release仓库。-->
                <repository>
                    <!--id任意，在setting文件中<server>的ID与这里一致-->
                    <id>${nexus.name}</id>
                    <name>${nexus.name} Releases</name>
                    <!--指向仓库类型为host(宿主仓库）的储存类型为Release的仓库-->
                    <url>${nexus.url}/repository/maven-releases/</url>
                </repository>
                <snapshotRepository>
                    <id>${nexus.name}</id>
                    <name>${nexus.name} Snapshots</name>
                    <!--指向仓库类型为host(宿主仓库）的储存类型为Snapshot的仓库-->
                    <url>${nexus.url}/repository/maven-snapshots/</url>
                </snapshotRepository>
            </distributionManagement>
        </profile>
    </profiles>
</project>